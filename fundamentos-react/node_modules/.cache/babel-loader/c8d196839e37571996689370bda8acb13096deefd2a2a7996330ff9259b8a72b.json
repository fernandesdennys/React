{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\denny\\\\OneDrive\\\\\\xC1rea de Trabalho\\\\curso-react\\\\fundamentos-react\\\\src\\\\components\\\\repeticao\\\\ListaAlunos.jsx\";\nimport React from 'react';\nimport './ListaAlunos.css';\nimport alunos from '../../data/alunos';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default props => {\n  const list = /*#__PURE__*/_jsxDEV(\"li\", {\n    children: [alunos[0].id, \" \", alunos[0].nome, \" \", alunos[0].nota]\n  }, aluno.id, true, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 5\n  }, this);\n  const alunosJSX = alunos.map(aluno => {\n    return /*#__PURE__*/_jsxDEV(\"li\", {\n      children: [aluno.id, \" \", aluno.nome, \" \", aluno.nota]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this);\n  });\n\n  /* Eu transformei uma lista de objetos do tipo ALUNO em trexos de JSX\r\n  da mesma forma que a gente consegue pegar um trexo de JSX e armazenar em uma variavel\r\n  eu consigo pegar um treco de JSX apartir de uma função MAP e para cada objeto transformar esses elementos \r\n  em trexos de JSX e assim colocar ele dentro da UL conforme mostra embaixo, de tal forma que ele vai mostrar \r\n  todos os elementos que foram convertidos de alunos para list item que é exatamento o LI*/\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: alunosJSX\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};","map":{"version":3,"names":["React","alunos","jsxDEV","_jsxDEV","props","list","children","id","nome","nota","aluno","fileName","_jsxFileName","lineNumber","columnNumber","alunosJSX","map"],"sources":["C:/Users/denny/OneDrive/Área de Trabalho/curso-react/fundamentos-react/src/components/repeticao/ListaAlunos.jsx"],"sourcesContent":["import React from 'react';\r\nimport './ListaAlunos.css';\r\nimport alunos from '../../data/alunos';\r\n\r\nexport default (props) => {\r\n  const list = (\r\n    <li key={aluno.id}>\r\n      {alunos[0].id} {alunos[0].nome} {alunos[0].nota}\r\n    </li>\r\n  );\r\n\r\n  const alunosJSX = alunos.map((aluno) => {\r\n    return (\r\n      <li>\r\n        {aluno.id} {aluno.nome} {aluno.nota}\r\n      </li>\r\n    );\r\n  });\r\n\r\n  /* Eu transformei uma lista de objetos do tipo ALUNO em trexos de JSX\r\n  da mesma forma que a gente consegue pegar um trexo de JSX e armazenar em uma variavel\r\n  eu consigo pegar um treco de JSX apartir de uma função MAP e para cada objeto transformar esses elementos \r\n  em trexos de JSX e assim colocar ele dentro da UL conforme mostra embaixo, de tal forma que ele vai mostrar \r\n  todos os elementos que foram convertidos de alunos para list item que é exatamento o LI*/\r\n\r\n  return (\r\n    <div>\r\n      <ul>{alunosJSX}</ul>\r\n    </div>\r\n  );\r\n};\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAO,mBAAmB;AAC1B,OAAOC,MAAM,MAAM,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvC,eAAgBC,KAAK,IAAK;EACxB,MAAMC,IAAI,gBACRF,OAAA;IAAAG,QAAA,GACGL,MAAM,CAAC,CAAC,CAAC,CAACM,EAAE,EAAC,GAAC,EAACN,MAAM,CAAC,CAAC,CAAC,CAACO,IAAI,EAAC,GAAC,EAACP,MAAM,CAAC,CAAC,CAAC,CAACQ,IAAI;EAAA,GADxCC,KAAK,CAACH,EAAE;IAAAI,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEb,CACL;EAED,MAAMC,SAAS,GAAGd,MAAM,CAACe,GAAG,CAAEN,KAAK,IAAK;IACtC,oBACEP,OAAA;MAAAG,QAAA,GACGI,KAAK,CAACH,EAAE,EAAC,GAAC,EAACG,KAAK,CAACF,IAAI,EAAC,GAAC,EAACE,KAAK,CAACD,IAAI;IAAA;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjC,CAAC;EAET,CAAC,CAAC;;EAEF;AACF;AACA;AACA;AACA;;EAEE,oBACEX,OAAA;IAAAG,QAAA,eACEH,OAAA;MAAAG,QAAA,EAAKS;IAAS;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACjB,CAAC;AAEV,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}